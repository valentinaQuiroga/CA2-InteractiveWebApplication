/* meter estilos */

#logo {
  background-image: url("/frontend/src/static/logo-dark.png");
  padding-right: 215px;
  padding-bottom: 54px;
  margin-right: 20px;
}

.parallax {
  opacity: 1;
}

.fullscreen > .container,
.fullscreen > .container-fluid {
  height: 100%;
}

.homePic {
  background-size: cover !important;
  padding: 17%;
}

body #wrapper {
  padding: 0;
  margin: 0;
  overflow-x: hidden;
}

body.wide #wrapper {
  width: 100%;
  margin: 0;
}

body.boxed #wrapper,
body.boxed-simple #wrapper {
  position: relative;
  border: 1px solid #eeeeee;
  background-color: #ffffff;
}

.titulo-entrada {
  font-size: 90px;
}

@media (max-width: 479px) {
  .text-large,
  .text-large span,
  .text-large span span,
  .text-large-light,
  .text-large-light span,
  .text-large-light span span,
  .text-extra-large,
  .text-extra-large span,
  .text-lg,
  .text-lg span,
  .text-lg span span {
    font-size: 40px !important;
    line-height: 40px !important;
  }
}

/* //////////////////////////////////////// */

/*

All grid code is placed in a 'supports' rule (feature query) at the bottom of the CSS (Line 77). 
        
The 'supports' rule will only run if your browser supports CSS grid.

Flexbox is used as a fallback so that browsers which don't support grid will still recieve an identical layout.

*/

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  background-color: #fafafa;
  font-family: "Montserrat", Arial, sans-serif;
}

.container {
  max-width: 100rem;
  margin: 0 auto;
  padding: 0 2rem 2rem;
}

.heading {
  font-family: "Montserrat", Arial, sans-serif;
  font-size: 4rem;
  font-weight: 500;
  line-height: 1.5;
  text-align: center;
  padding: 3.5rem 0;
  color: #1a1a1a;
}

.heading span {
  display: block;
}

.gallery {
  display: flex;
  flex-wrap: wrap;
  /* Compensate for excess margin on outer gallery flex items */
  margin: -1rem -1rem;
}

.gallery-item {
  /* Minimum width of 24rem and grow to fit available space */
  flex: 1 0 24rem;
  /* Margin value should be half of grid-gap value as margins on flex items don't collapse */
  margin: 1rem;
  box-shadow: 0.3rem 0.4rem 0.4rem rgba(0, 0, 0, 0.4);
  overflow: hidden;
}

.gallery-image {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 400ms ease-out;
}

.gallery-image:hover {
  transform: scale(1.15);
}

/*

The following rule will only run if your browser supports CSS grid.

Remove or comment-out the code block below to see how the browser will fall-back to flexbox styling. 

*/

@supports (display: grid) {
  .gallery {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24rem, 1fr));
    grid-gap: 2rem;
  }

  .gallery,
  .gallery-item {
    margin: 0;
  }
}

.gallery-titulo {
  padding-top: 5%;
  padding-bottom: 1%;
  letter-spacing: 10px;
}

.text-muted {
  color: #d4dce1 !important;
  font-size: 50%;
  letter-spacing: 10px;
}
